---
import { themes } from '../config/themes';
---

<div class="theme-toggle-wrapper">
  <button id="theme-toggle" class="theme-toggle-btn" title="Switch Theme">
    <svg class="theme-toggle-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5H9M21 9H9M21 13H9M21 17H9M21 21H9">
      </path>
    </svg>
    <!-- Alternative palette icon -->
    <!-- <svg class="theme-toggle-icon" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zM3 15a1 1 0 011-1h1a1 1 0 011 1v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1zm6-11a1 1 0 011-1h1a1 1 0 011 1v2a1 1 0 01-1 1h-1a1 1 0 01-1-1V4zm6 0a1 1 0 011-1h1a1 1 0 011 1v2a1 1 0 01-1 1h-1a1 1 0 01-1-1V4zm-6 4a1 1 0 011-1h1a1 1 0 011 1v2a1 1 0 01-1 1h-1a1 1 0 01-1-1V8zm6 0a1 1 0 011-1h1a1 1 0 011 1v2a1 1 0 01-1 1h-1a1 1 0 01-1-1V8zm-6 4a1 1 0 011-1h1a1 1 0 011 1v2a1 1 0 01-1 1h-1a1 1 0 01-1-1v-2zm6 0a1 1 0 011-1h1a1 1 0 011 1v2a1 1 0 01-1 1h-1a1 1 0 01-1-1v-2z" clip-rule="evenodd"/>
    </svg> -->
  </button>

  <div id="theme-dropdown" class="theme-dropdown hidden">
    <div class="theme-dropdown-content">
      {Object.entries(themes).map(([key, theme]) => (
        <button
          class="theme-option"
          data-theme={key}
        >
          {theme.displayName}
        </button>
      ))}
    </div>
  </div>
</div>

<script>
  const themeToggle = document.getElementById('theme-toggle');
  const themeDropdown = document.getElementById('theme-dropdown');
  const themeOptions = document.querySelectorAll('.theme-option');

  themeToggle?.addEventListener('click', () => {
    themeDropdown?.classList.toggle('hidden');
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    if (!themeToggle?.contains(e.target as Node) && !themeDropdown?.contains(e.target as Node)) {
      themeDropdown?.classList.add('hidden');
    }
  });

  themeOptions.forEach(option => {
    option.addEventListener('click', () => {
      const themeName = option.getAttribute('data-theme');
      if (themeName) {
        // Try to call switchTheme function
        if (typeof (window as any).switchTheme === 'function') {
          (window as any).switchTheme(themeName);
        } else {
          // Fallback: dispatch custom event
          window.dispatchEvent(new CustomEvent('switchTheme', { detail: { theme: themeName } }));
        }
        themeDropdown?.classList.add('hidden');
      }
    });
  });

  // Listen for custom theme switch events as fallback
  window.addEventListener('switchTheme', (event: any) => {
    const themeName = event.detail?.theme;
    if (themeName && (window as any).themes && (window as any).applyTheme) {
      const theme = (window as any).themes[themeName];
      if (theme) {
        (window as any).applyTheme(theme);
        localStorage.setItem('theme', themeName);
        document.documentElement.setAttribute('data-theme', themeName);
      }
    }
  });
</script>